/*
** cusum.prg was written by Joakim Westerlund, Department of Economics, Lund University.
** Contact info:  joakim.westerlund@nek.lu.se
**
** The code can be used freely as long as proper reference is given. No performance
** guarantee is made. Bug reports are welcome.
*/

/* procedures */
proc (1) = cusum_west(u, q);
    local t, io, s, cus;
    
    t  = rows(u);
    io = fejer(u,q);
    s  = (u'u)/rows(u);
    s  = s + io + io';
    
    cus = maxc(1/(sqrt(t*s)).*abs(cumsumc(u)));
    
    retp(cus);
endp;

proc(2) = mom_cusum(mod, k);
    local mu, var;
    
    mu = {  1.063552 0.930258 0.843500 0.771490 0.727086 ,
        0.751281 0.676628 0.619667 0.573433 0.539597 ,
        0.584626 0.553611 0.521820 0.499409 0.477681 };
    
    var = { 0.183683 0.126593 0.093796 0.070758 0.059383 ,
        0.050239 0.037289 0.028520 0.021072 0.017286 ,
        0.018457 0.015716 0.013679 0.012123 0.010621 };
    
    retp(mu[mod+1, k], var[mod+1, k]);
endp;

proc(1) = cusum_panel(y, x, mod, fm, p);
    local i, cus, u, mu, var, n;
    
    n = cols(y);
    
    // Test begins
    i   = 1;
    cus = 0;
    do until i > n;
        
        if fm == 0;
            u = dols(y[., i], x[., 1+(i-1)*k:i*k], mod, p);
        endif;
        
        if fm == 1;
            u = fmols(y[., i], x[., 1+(i-1)*k:i*k], mod, q);
        endif;
        
        cus = cus + cusum_west(u, q);
        
        i = i + 1;
    endo;
    
    { mu, var } = mom(mod, k);
    cus      = sqrt(n)*(cus/n-mu)./sqrt(var);
    
    retp(cus);
endp;
